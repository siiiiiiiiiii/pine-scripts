//@version=5
strategy("交易系統", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=2)

// --- User Inputs ---
buy_qty_percent = input.float(30, title="Buy Order Size (% of Equity)", minval=1, maxval=100)
sell_qty_percent = input.float(10, title="Sell Order Size (% of Position)", minval=1, maxval=100)
bollinger_mult = input.float(2, title="Bollinger Bands Multiplier", minval=1, step=0.1)
max_drawdown_limit = input.float(20, title="Max Drawdown Limit (%)", minval=1)
trade_cost = input.float(0.1, title="Trade Cost (%)", minval=0, step=0.1) // Trading cost
slippage_percent = input.float(0.2, title="Slippage (%)", minval=0, step=0.1) // Slippage simulation
stop_loss_percent = input.float(10, title="Stop Loss (%)", minval=1, maxval=50)
take_profit_percent = input.float(20, title="Take Profit (%)", minval=1, maxval=50)
rolling_period_years = input.int(5, title="Rolling Backtest Period (Years)", minval=1)

// --- Monthly Indicators ---
monthly_close = request.security(syminfo.tickerid, "M", close)
monthly_ma30 = ta.sma(monthly_close, 30)
monthly_std_dev = ta.stdev(monthly_close, 30)
monthly_upper_band = monthly_ma30 + (bollinger_mult * monthly_std_dev)
monthly_lower_band = monthly_ma30 - (bollinger_mult * monthly_std_dev)

// --- Dynamic Levels for Stop Loss and Take Profit ---
stop_loss_level = strategy.position_avg_price * (1 - stop_loss_percent / 100)
take_profit_level = strategy.position_avg_price * (1 + take_profit_percent / 100)

// --- Rolling Backtest Logic ---
rolling_start_time = timestamp(year(timenow) - rolling_period_years, month(timenow), dayofmonth(timenow))
rolling_active = (time >= rolling_start_time)
bgcolor(rolling_active ? color.new(color.green, 90) : na, title="Rolling Backtest Period Highlight")

// --- Plotting ---
plot(monthly_ma30, color=color.blue, title="30-Month MA")
plot(monthly_upper_band, color=color.red, title="Bollinger Upper Band", linewidth=1, style=plot.style_line)
plot(monthly_lower_band, color=color.green, title="Bollinger Lower Band", linewidth=1, style=plot.style_line)
plot(strategy.position_size > 0 ? stop_loss_level : na, color=color.red, title="Stop Loss Level", style=plot.style_line, linewidth=1)
plot(strategy.position_size > 0 ? take_profit_level : na, color=color.green, title="Take Profit Level", style=plot.style_line, linewidth=1)

// --- Buy Condition ---
if close < monthly_ma30 and rolling_active
    strategy.entry("Buy", strategy.long, qty=strategy.equity * (buy_qty_percent / 100) / close * (1 + slippage_percent / 100)) // Simulate slippage

// --- Exit Conditions ---
if close > monthly_upper_band
    strategy.close("Buy", qty=strategy.position_size * (sell_qty_percent / 100))

if close < stop_loss_level
    strategy.close("Buy")

if close > take_profit_level
    strategy.close("Buy")

// --- Performance Metrics ---
equity = strategy.equity
drawdown = (strategy.max_drawdown / strategy.initial_capital) * 100

// Sharpe Ratio Calculation
avg_profit_per_trade = strategy.netprofit / (strategy.closedtrades > 0 ? strategy.closedtrades : 1)
profit_std_dev = ta.stdev(avg_profit_per_trade, 30)
sharpe_ratio = profit_std_dev > 0 ? avg_profit_per_trade / profit_std_dev : 0

// Sortino Ratio Calculation
downside_risk = ta.stdev(avg_profit_per_trade < 0 ? avg_profit_per_trade : 0, 30)
sortino_ratio = downside_risk > 0 ? avg_profit_per_trade / downside_risk : 0

// Percent Profitable Calculation
percent_profitable = strategy.wintrades / strategy.closedtrades * 100

// --- Dynamic Adjustments Based on Metrics ---
if sharpe_ratio <= 0 or sortino_ratio <= 0
    strategy.close_all(comment="Negative Sharpe/Sortino, Trading Halted")

if percent_profitable < 50
    strategy.close_all(comment="Percent Profitable Too Low")

if drawdown > max_drawdown_limit
    strategy.close_all(comment="Max Drawdown Breached")

// --- Simulating Diversification Testing ---
symbol_1_close = request.security("SPY", "M", close)
symbol_2_close = request.security("GLD", "M", close)
symbol_3_close = request.security("BTCUSD", "M", close)

plot(symbol_1_close, color=color.new(color.gray, 80), title="SPY Close")
plot(symbol_2_close, color=color.new(color.blue, 80), title="GLD Close")
plot(symbol_3_close, color=color.new(color.orange, 80), title="BTCUSD Close")

// --- Plot Performance Metrics ---
plot(equity, color=color.green, title="Equity Curve")
hline(max_drawdown_limit, "Max Drawdown Limit", color=color.red, linestyle=hline.style_dotted)
plot(sharpe_ratio, color=color.blue, title="Sharpe Ratio")
plot(sortino_ratio, color=color.purple, title="Sortino Ratio")
plot(percent_profitable, color=color.orange, title="Percent Profitable")


1
